<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.dao.BillMapper">
  <resultMap id="BaseResultMap" type="com.mybatis.bean.Bill">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderId" jdbcType="VARCHAR" property="orderid" />
    <result column="cost" jdbcType="REAL" property="cost" />
    <result column="providerId" jdbcType="INTEGER" property="providerid" />
    <result column="isPayment" jdbcType="INTEGER" property="ispayment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orderId, cost, providerId, isPayment
  </sql>
  <select id="selectByExample" parameterType="com.mybatis.bean.BillExample" resultMap="BaseResultMap">
    <!-- select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from smbms_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if> -->
    
     <![CDATA[  
			SELECT b.*, p.proName,s.name as sname  FROM smbms_bill b
			
			inner JOIN smbms_provider p
			
			ON  b.`providerId`=p.`id`
			
			inner join smbms_status s
			
			on b.`isPayment` =s.`id`
	]]>
		
	<where>
		<if test="orderid != null">
			b.orderid like #{orderid}
		</if>
	</where>
		
	order by b.id asc
	
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
   <![CDATA[  
			SELECT b.*, p.proName,s.name as sname  FROM smbms_bill b
			
			inner JOIN smbms_provider p
			
			ON  b.`providerId`=p.`id`
			
			inner join smbms_status s
			
			on b.`isPayment` =s.`id`
	]]>
    
    where b.id = #{id,jdbcType=INTEGER}
    
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from smbms_bill
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mybatis.bean.BillExample">
    delete from smbms_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mybatis.bean.Bill">
    insert into smbms_bill (id, orderId, cost, 
      providerId, isPayment)
    values (#{id,jdbcType=INTEGER}, #{orderid,jdbcType=VARCHAR}, #{cost,jdbcType=REAL}, 
      #{providerid,jdbcType=INTEGER}, #{ispayment,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mybatis.bean.Bill">
    insert into smbms_bill
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderid != null">
        orderId,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="providerid != null">
        providerId,
      </if>
      <if test="ispayment != null">
        isPayment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=REAL},
      </if>
      <if test="providerid != null">
        #{providerid,jdbcType=INTEGER},
      </if>
      <if test="ispayment != null">
        #{ispayment,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mybatis.bean.BillExample" resultType="java.lang.Long">
    select count(*) from smbms_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update smbms_bill
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null">
        orderId = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=REAL},
      </if>
      <if test="record.providerid != null">
        providerId = #{record.providerid,jdbcType=INTEGER},
      </if>
      <if test="record.ispayment != null">
        isPayment = #{record.ispayment,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update smbms_bill
    set id = #{record.id,jdbcType=INTEGER},
      orderId = #{record.orderid,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=REAL},
      providerId = #{record.providerid,jdbcType=INTEGER},
      isPayment = #{record.ispayment,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mybatis.bean.Bill">
    update smbms_bill
    <set>
      <if test="orderid != null">
        orderId = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=REAL},
      </if>
      <if test="providerid != null">
        providerId = #{providerid,jdbcType=INTEGER},
      </if>
      <if test="ispayment != null">
        isPayment = #{ispayment,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mybatis.bean.Bill">
    update smbms_bill
    set orderId = #{orderid,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=REAL},
      providerId = #{providerid,jdbcType=INTEGER},
      isPayment = #{ispayment,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <!--按订单Id查询  -->
  <select id="selectByName" resultType="com.mybatis.bean.Bill">
		select * from smbms_bill  
		<trim prefix="where" prefixOverrides="and | or">
			<if test="orderid != null">
				and orderid = #{orderid}
			</if>
		</trim>
	</select>
	
	<!-- 修改消费 -->
	<update id="updateCostAdd" parameterType="com.mybatis.bean.Bill">
	
    	UPDATE smbms_bill SET cost = cost + #{cost,jdbcType=REAL}  WHERE id = #{id}
    	
    </update>
    
    <update id="updateCostDel" parameterType="com.mybatis.bean.Bill">
	
    	UPDATE smbms_bill SET cost = cost - #{cost,jdbcType=REAL}  WHERE id = #{id}
    	
    </update>
    
    
</mapper>